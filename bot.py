# bot.py - –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –±–æ—Ç–∞
import asyncio
import logging
import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message

from database.db_manager import DatabaseManager
from handlers.transactions import TransactionHandler
from handlers.reports import ReportHandler
from handlers.delete_transactions import DeleteHandler
from handlers.keyboard_handler import KeyboardHandler
from ai.openrouter_client import OpenRouterClient
from config import Config

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class FinanceBot:
    def __init__(self):
        self.config = Config()
        self.bot = Bot(token=self.config.BOT_TOKEN)
        self.dp = Dispatcher()
        self.db = DatabaseManager()
        self.ai_client = OpenRouterClient(self.config.OPENROUTER_API_KEY)
        self.transaction_handler = TransactionHandler(self.db, self.ai_client)
        self.report_handler = ReportHandler(self.db, self.ai_client)
        self.delete_handler = DeleteHandler(self.db)
        self.keyboard_handler = KeyboardHandler()

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        self.register_handlers()

    def register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""

        @self.dp.message(Command("start"))
        async def start_command(message: Message):
            user_id = message.from_user.id

            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if not self.db.is_user_registered(user_id):
                success = self.db.register_user(
                    user_id, 
                    message.from_user.username, 
                    message.from_user.first_name
                )
                if success:
                    welcome_msg = f"üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!"
                else:
                    welcome_msg = "üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!"
            else:
                welcome_msg = "üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!"

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º –º–µ–Ω—é
            await message.answer(
                f"{welcome_msg}\n\n"
                "üí∞ **–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–æ—Ç —Å AI –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ OPSversion!**\n\n"
                "üìù **–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:**\n"
                "‚Ä¢ –ü–∏—à–∏—Ç–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: `–æ–±–µ–¥ 1500`\n"
                "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –≤–Ω–∏–∑—É\n"
                "‚Ä¢ –ü–æ–ª—É—á–∞–π—Ç–µ AI —Å–æ–≤–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏–∑\n\n"
                "üöÄ **–ù–∞—á–∏–Ω–∞–π—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!**",
                reply_markup=self.keyboard_handler.get_main_menu(user_id),
                parse_mode="Markdown"
            )

        @self.dp.message(Command("help"))
        async def help_command(message: Message):
            await message.answer(
                "ü§ñ **–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–æ—Ç —Å AI**\n\n"
                "**üí∞ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:**\n"
                "‚Ä¢ `–æ–±–µ–¥ 1500` - —Ä–∞—Å—Ö–æ–¥ –Ω–∞ –µ–¥—É\n"
                "‚Ä¢ `–∑–∞—Ä–ø–ª–∞—Ç–∞ 200000` - –¥–æ—Ö–æ–¥\n"
                "‚Ä¢ `120 000 –∫—Ä–µ–¥–∏—Ç` - –≤—ã–ø–ª–∞—Ç–∞ –∫—Ä–µ–¥–∏—Ç–∞\n\n"
                "**üìä –û—Ç—á–µ—Ç—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**\n"
                "‚Ä¢ `/balance` - —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å\n"
                "‚Ä¢ `/stats` - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü\n"
                "‚Ä¢ `/report` - –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç —Å AI –∞–Ω–∞–ª–∏–∑–æ–º\n\n"
                "**üóë –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏:**\n"
                "‚Ä¢ `/delete` - —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é\n"
                "‚Ä¢ `/deletelist` - –≤—ã–±—Ä–∞—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞\n"
                "‚Ä¢ –ö–Ω–æ–ø–∫–∞ –ø–æ–¥ –∫–∞–∂–¥–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–µ–π\n\n"
                "**ü§ñ AI –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**\n"
                "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π\n"
                "‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ—Å–ª–µ —Ç—Ä–∞—Ç\n"
                "‚Ä¢ –ê–Ω–∞–ª–∏–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∏ –ø—Ä–æ–≥–Ω–æ–∑—ã\n\n"
                "–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤–∏–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –≤—ã! üîí",
                parse_mode="Markdown"
            )

        # –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã
        @self.dp.message(Command("admin"))
        async def admin_command(message: Message):
            user_id = message.from_user.id
            if user_id not in self.config.ADMIN_USERS:
                await message.answer("‚ùå –ö–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
                return

            stats = self.db.get_user_stats()
            await message.answer(
                f"üëë **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞**\n\n"
                f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['total']}\n"
                f"üü¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ 7 –¥–Ω–µ–π: {stats['active_7d']}\n"
                f"üÜï –ù–æ–≤—ã—Ö –∑–∞ 30 –¥–Ω–µ–π: {stats['new_30d']}",
                parse_mode="Markdown"
            )

        @self.dp.message(Command("balance"))
        async def balance_command(message: Message):
            user_id = message.from_user.id
            balance = self.db.get_user_balance(user_id)

            await message.answer(f"üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance:,.0f} ‚Ç∏")

        @self.dp.message(Command("report"))
        async def report_command(message: Message):
            await self.report_handler.handle_report_request(message)

        @self.dp.message(Command("stats"))
        async def stats_command(message: Message):
            await self.report_handler.handle_stats_request(message)

        @self.dp.message(Command("delete"))
        async def delete_last_command(message: Message):
            await self.delete_handler.handle_delete_last(message)

        @self.dp.message(Command("deletelist"))
        async def delete_list_command(message: Message):
            await self.delete_handler.handle_delete_list(message)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        @self.dp.message()
        async def handle_message(message: Message):
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –∫–Ω–æ–ø–∫–∞ –º–µ–Ω—é –∏–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è
            is_menu_button = await self.keyboard_handler.handle_menu_button(
                message, self.db, self.report_handler, self.delete_handler
            )

            # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –∫–Ω–æ–ø–∫–∞ –º–µ–Ω—é, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
            if not is_menu_button:
                await self.transaction_handler.handle_transaction(message)

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤ –∏ —É–¥–∞–ª–µ–Ω–∏—è
        @self.dp.callback_query()
        async def handle_callbacks(callback: types.CallbackQuery):
            if callback.data.startswith("report_"):
                await self.report_handler._generate_report(callback)
            elif callback.data.startswith("delete_"):
                await self.delete_handler.handle_delete_callback(callback)
            await callback.answer()

    async def start_polling(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        logger.info("ü§ñ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        await self.dp.start_polling(self.bot)

if __name__ == "__main__":
    bot = FinanceBot()
    asyncio.run(bot.start_polling())
